using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class Tehtava_3_g2456_teht3_mainpage : System.Web.UI.Page
{
    List<Merkinta> MerkintaLista = new List<Merkinta>();
    List<Merkinta> OmaLista = new List<Merkinta>();
    List<Merkinta> lstLista = new List<Merkinta>();

    private string GridViewSortDirection
    {
        get { return ViewState["SortDirection"] as string ?? "ASC"; }
        set { ViewState["SortDirection"] = value; }
    }
    private string GridViewSortExpression
    {
        get { return ViewState["SortExpression"] as string ?? string.Empty; }
        set { ViewState["SortExpression"] = value; }
    }
    private string GetSortDirection()
    {
        switch (GridViewSortDirection)
        {
            case "ASC":
                GridViewSortDirection = "DESC";
                break;
            case "DESC":
                GridViewSortDirection = "ASC";
                break;
        }

        return GridViewSortDirection;
    }

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!Page.IsPostBack)
        {
            initMyStuff();
        }
        else
        {
            MerkintaLista = (List<Merkinta>)ViewState["MerkintaLista"];
            OmaLista = (List<Merkinta>)ViewState["OmaLista"];
            lstLista = (List<Merkinta>)ViewState["lstLista"];
        }
    }
    protected void initMyStuff()
    {
        if (Session["UserAuthentication"] != null)
        {
            btnSave.Visible = true;
            addNew.Visible = true;
            btnLogout.Visible = true;
            autoNakyma.AutoGenerateEditButton = true;
            autoNakyma.AutoGenerateDeleteButton = true;
            MerkintaLista = BLteht3.HaeAutot();
            ViewState["MerkintaLista"] = MerkintaLista;

            lstUsers.Items.Add("Kaikki");
            foreach (Merkinta item in MerkintaLista)
            {
                if (item.username == Session["UserAuthentication"].ToString())
                {
                    OmaLista.Add(item);
                }
                if (!lstUsers.Items.Contains(new ListItem(item.username)))
                {
                    lstUsers.Items.Add(item.username);
                }
                
            }
            lblInfo.Text = "Merkintöjä yhteensä: " + BLteht3.HaeAutot().Count + "Joista sinun on " + OmaLista.Count(); ;

            ViewState["OmaLista"] = OmaLista;
            toGridView(OmaLista);
        }
        else
        {
            Session["UserAuthentication"] = null;
            btnSave.Visible = false;
            addNew.Visible = false;
            btnLogout.Visible = false;
            autoNakyma.AutoGenerateEditButton = false;
            autoNakyma.AutoGenerateDeleteButton = false;
        }
    }
    protected void toGridView(List<Merkinta> MerkintaLista1)
    {
        if (MerkintaLista1.Count > 0)
        {
            autoNakyma.DataSource = MerkintaLista1;
            autoNakyma.DataBind();
        }
        
    }
    protected void autoNakyma_Sorting(object sender, GridViewSortEventArgs e)
    {
        GridViewSortExpression = e.SortExpression;
        toGridView(BLteht3.SortList(MerkintaLista, GridViewSortExpression, GetSortDirection()));
    }
    protected void autoNakyma_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        autoNakyma.PageIndex = e.NewPageIndex;
        toGridView(MerkintaLista);
    }
    protected void autoNakyma_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        MerkintaLista.RemoveAt(e.RowIndex);
        toGridView(MerkintaLista);
    }
    protected void autoNakyma_RowEditing(object sender, GridViewEditEventArgs e)
    {
        autoNakyma.EditIndex = e.NewEditIndex;

        toGridView(MerkintaLista);
    }
    protected void autoNakyma_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
    {
        autoNakyma.EditIndex = -1;
        toGridView(MerkintaLista);
    }
    protected void autoNakyma_RowUpdating(object sender, GridViewUpdateEventArgs e)
    {
        GridViewRow row = autoNakyma.Rows[e.RowIndex];

        MerkintaLista[e.RowIndex].username = BLteht3.regexString(((TextBox)(row.Cells[1].Controls[0])).Text, "userName");
        MerkintaLista[e.RowIndex].date = BLteht3.regexString((((TextBox)(row.Cells[2].Controls[0])).Text), "Date");
        MerkintaLista[e.RowIndex].time = BLteht3.regexString((((TextBox)(row.Cells[3].Controls[0])).Text), "Time");
       
        autoNakyma.EditIndex = -1;
        toGridView(MerkintaLista);
    }
    protected void addNew_Click(object sender, EventArgs e)
    {
        Merkinta asd = new Merkinta();
        asd.username = Session["UserAuthentication"].ToString();
        asd.date = DateTime.Now.ToShortDateString();

        MerkintaLista.Add(asd);

        MerkintaLista = BLteht3.SortList(MerkintaLista, "date", "DESC");

        autoNakyma.EditIndex = 0;

        toGridView(MerkintaLista);
    }
    protected void btnSave_Click(object sender, EventArgs e)
    {
        BLteht3.VieAutot(MerkintaLista);
    }
    protected void btnLogout_Click(object sender, EventArgs e)
    {
        var response = base.Response;

        Session["UserAuthentication"] = null;
        response.Redirect("~/Tehtava 3/g2456_teht3_login.aspx");
    }
    protected void lstUsers_SelectedIndexChanged(object sender, EventArgs e)
    {
        lstLista = new List<Merkinta>();

        if (lstUsers.SelectedValue.ToString() != "Kaikki")
        {

            foreach (Merkinta item in MerkintaLista)
            {
                if (item.username == lstUsers.SelectedValue.ToString())
                {
                    lstLista.Add(item);
                }
            }

        }
        else
        {
            MerkintaLista = BLteht3.HaeAutot();
            ViewState["MerkintaLista"] = MerkintaLista;
            toGridView(MerkintaLista);
        }
        lblInfo.Text = "Henkilöllä "+lstUsers.SelectedValue.ToString()+" on yhteensä merkintöjä "+lstLista.Count();
        ViewState["lstLista"] = lstLista;
        toGridView(lstLista);
    }
}